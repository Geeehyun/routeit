plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.9'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'com.github.node-gradle.node' version '3.5.1' // Node.js 플러그인 추가
}

group = 'com.routeit'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.3'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

node {
	version = '16.14.2' // Node.js LTS 버전
	npmVersion = '6.14.15' // 안정적인 npm 버전
	download = true	// 빌드할 때 node 다운로드 진행
}


if (!tasks.names.contains('npmInstall')) {	// 없을 떄만 진행
	task npmInstall(type: NpmTask) {
		args = ['install']
		workingDir = file("${project.rootDir}/frontend")	// 중요 : npm install 진행할 때 프로젝트 루트 하위 frontend 디렉토리 하위 package.json 참고하도록 경로 설정
		doFirst {
			println "Running npm install in directory: ${rootDir}"	// 참조중인 디렉토리 로그 표시
		}
	}
}

if (!tasks.names.contains('npmBuild')) {	// 없을 떄만 진행
	task npmBuild(type: NpmTask) {
		dependsOn npmInstall
		args = ['run', 'build']
		workingDir = file("${project.rootDir}/frontend")	// 중요 : npm build 진행할 때 프로젝트 루트 하위 frontend 디렉토리 하위 node_modules 참고하도록 경로 설정
		doFirst {
			println "Running npm install in directory: ${rootDir}"	// 참조중인 디렉토리 로그 표시
		}
	}
}


bootJar {
	dependsOn npmBuild
	from("frontend/dist") {
		into("static")
	}
}

test {
	exclude '**/*'	// build 시 test 진행안함
}